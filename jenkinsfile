pipeline {
    agent any
    options {
      ansiColor('xterm')
      timestamps()
      timeout(time: 1, unit: 'HOURS')
    }
    environment {
      ARTIFACTOR = "${env.BUILD_NUMBER}.zip"
      SLACK_MESSAGE = "Job '${env.JOB_NAME}' Build ${env.BUILD_NUMBER} URL ${env.BUILD_URL}"
    }
    parameters {
      string(name: 'SLACK_CHANNEL', defaultValue: '#deploys', description: '')
      choice(name: 'TYPE', choices: 'aut\ncron\ndata', description: 'Autoscaling, Cron or Data')
      booleanParam(name: 'LAUNCH_CONFIGURATION', defaultValue: false, description: 'Update aws new ami')
    }



    stages {
        stage("Repository") {
            steps {
              //git url: "https://github.com/pynef/jenkins-pipeline.git"
              checkout scm
              sh "echo ${env.WORKSPACE}"
            }
        }
        stage("Build") {
            steps {
              echo "build"
              sh "echo ${env.BUILD_NUMBER}"
              echo "agregando artefacto"
              sh "touch ${ARTIFACTOR}"
            }
        }
        stage("Test") {
            steps {
              sh "echo tests"
              sh "echo ${env.BUILD_URL}"
            }
        }
        stage("Deploy") {
            steps {
              sh "echo deploy"
              sh "echo ${env.JOB_NAME}"
              sh "echo ${env.ARTIFACTOR}"
              sh "echo ${env.SLACK_MESSAGE}"
              archiveArtifacts artifacts: "${ARTIFACTOR}", onlyIfSuccessful: true
            }
        }
    }
}
